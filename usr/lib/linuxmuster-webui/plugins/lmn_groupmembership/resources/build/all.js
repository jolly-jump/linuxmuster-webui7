// Generated by CoffeeScript 2.3.1
(function() {
  angular.module('lmn.groupmembership', ['core', 'lm.common']);

}).call(this);

// Generated by CoffeeScript 2.3.1
(function() {
  angular.module('lmn.groupmembership').config(function($routeProvider) {
    return $routeProvider.when('/view/lmn/groupmembership', {
      controller: 'LMNGroupMembershipController',
      templateUrl: '/lmn_groupmembership:resources/partial/index.html'
    });
  });

  angular.module('lmn.groupmembership').controller('LMNGroupMembershipController', function($scope, $http, $uibModal, gettext, notify, pageTitle) {
    pageTitle.set(gettext('Group Membership'));
    $scope.types = {
      schoolclass: {
        typename: gettext('Schoolclass'),
        checkbox: true,
        type: 'schoolclass'
      },
      printergroup: {
        typename: gettext('Printer'),
        checkbox: true,
        type: 'printergroup'
      }
    };
    $scope.sorts = [
      {
        name: gettext('Groupname'),
        fx: function(x) {
          return x.groupname;
        }
      },
      {
        name: gettext('Membership'),
        fx: function(x) {
          return x.membership;
        }
      },
      {
        name: gettext('Type'),
        fx: function(x) {
          return x.type;
        }
      }
    ];
    $scope.sort = $scope.sorts[0];
    $scope.paging = {
      page: 1,
      pageSize: 50
    };
    $scope.isActive = function(group) {
      if (group.type === 'printergroup') {
        if ($scope.types.printergroup.checkbox === true) {
          return true;
        }
      }
      if (group.type === 'schoolclass') {
        if ($scope.types.schoolclass.checkbox === true) {
          return true;
        }
      }
      return false;
    };
    $scope.resetClass = function() {
      var group, i, len, ref, result;
      // reset html class back (remove changed) so its not highlighted anymore
      result = document.getElementsByClassName("changed");
      while (result.length) {
        result[0].className = result[0].className.replace(/(?:^|\s)changed(?!\S)/g, '');
      }
      ref = $scope.groups;
      // reset group attribut back not not changed so an additional enroll will not set these groups again
      for (i = 0, len = ref.length; i < len; i++) {
        group = ref[i];
        group['changed'] = false;
      }
    };
    $scope.groupChanged = function(groupIndex, item) {
      //console.log ($scope.groups[groupIndex])
      $scope.groups[groupIndex]['changed'] = true;
      if (document.getElementById(item).className.match(/(?:^|\s)changed(?!\S)/)) {
        return document.getElementById(item).className = document.getElementById(item).className.replace(/(?:^|\s)changed(?!\S)/g, '');
      } else {
        return document.getElementById(item).className += " changed";
      }
    };
    $scope.getGroups = function(username) {
      return $http.post('/api/lmn/groupmembership', {
        action: 'list-groups',
        username: username
      }).then(function(resp) {
        return $scope.groups = resp.data;
      });
    };
    $scope.setGroups = function(groups) {
      return $http.post('/api/lmn/groupmembership', {
        action: 'set-groups',
        username: $scope.identity.user,
        groups: groups
      }).then(function(resp) {
        notify.success(gettext('Classes enrolled'));
        return $scope.resetClass();
      });
    };
    return $scope.$watch('identity.user', function() {
      if ($scope.identity.user === void 0) {
        return;
      }
      if ($scope.identity.user === null) {
        return;
      }
      if ($scope.identity.user === 'root') {
        $scope.identity.user = 'hulk';
      }
      //return
      $scope.getGroups($scope.identity.user);
    });
  });

}).call(this);

